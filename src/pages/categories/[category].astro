---
import { getCollection } from 'astro:content';
import CardContainer from '@components/CardContainer.astro';
import BaseLayout from '@layouts/BaseLayout.astro';
import { slugify, titlefy } from '@scripts';
import type { InferGetStaticParamsType, InferGetStaticPropsType } from 'astro';

export async function getStaticPaths() {
	const allPosts = await getCollection('posts');
	const categories: Set<string> = new Set();

	allPosts.map((post, id) => {
		post.data.tags?.forEach((tag: string, num: number) => {
			allPosts[id].data.tags[num] = slugify(tag);
			categories.add(allPosts[id].data.tags[num]);
		});
	});

	return Array.from(categories).map((one) => {
		return {
			params: { category: one },
			props: { posts: allPosts.filter((post) => post.data.tags?.includes(one)) }
		};
	});
}

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { category } = Astro.params as Params;
const { posts } = Astro.props as Props;
---

{
	category && (
		<BaseLayout pageTitle={'Blog | ' + titlefy(category)}>
			<h1 class='text-title'>
				Posts with{' '}
				<span class='underline decoration-sky-500'>{titlefy(category)}</span>
			</h1>
			<CardContainer {posts} />
		</BaseLayout>
	)
}
